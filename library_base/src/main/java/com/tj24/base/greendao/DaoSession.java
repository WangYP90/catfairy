package com.tj24.base.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.tj24.base.bean.appmanager.AppBean;
import com.tj24.base.bean.appmanager.AppClassfication;
import com.tj24.base.bean.appmanager.login.Suggestion;
import com.tj24.base.bean.appmanager.login.Version;
import com.tj24.base.bean.appmanager.MsgApk;

import com.tj24.base.greendao.AppBeanDao;
import com.tj24.base.greendao.AppClassficationDao;
import com.tj24.base.greendao.SuggestionDao;
import com.tj24.base.greendao.VersionDao;
import com.tj24.base.greendao.MsgApkDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig appBeanDaoConfig;
    private final DaoConfig appClassficationDaoConfig;
    private final DaoConfig suggestionDaoConfig;
    private final DaoConfig versionDaoConfig;
    private final DaoConfig msgApkDaoConfig;

    private final AppBeanDao appBeanDao;
    private final AppClassficationDao appClassficationDao;
    private final SuggestionDao suggestionDao;
    private final VersionDao versionDao;
    private final MsgApkDao msgApkDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        appBeanDaoConfig = daoConfigMap.get(AppBeanDao.class).clone();
        appBeanDaoConfig.initIdentityScope(type);

        appClassficationDaoConfig = daoConfigMap.get(AppClassficationDao.class).clone();
        appClassficationDaoConfig.initIdentityScope(type);

        suggestionDaoConfig = daoConfigMap.get(SuggestionDao.class).clone();
        suggestionDaoConfig.initIdentityScope(type);

        versionDaoConfig = daoConfigMap.get(VersionDao.class).clone();
        versionDaoConfig.initIdentityScope(type);

        msgApkDaoConfig = daoConfigMap.get(MsgApkDao.class).clone();
        msgApkDaoConfig.initIdentityScope(type);

        appBeanDao = new AppBeanDao(appBeanDaoConfig, this);
        appClassficationDao = new AppClassficationDao(appClassficationDaoConfig, this);
        suggestionDao = new SuggestionDao(suggestionDaoConfig, this);
        versionDao = new VersionDao(versionDaoConfig, this);
        msgApkDao = new MsgApkDao(msgApkDaoConfig, this);

        registerDao(AppBean.class, appBeanDao);
        registerDao(AppClassfication.class, appClassficationDao);
        registerDao(Suggestion.class, suggestionDao);
        registerDao(Version.class, versionDao);
        registerDao(MsgApk.class, msgApkDao);
    }
    
    public void clear() {
        appBeanDaoConfig.clearIdentityScope();
        appClassficationDaoConfig.clearIdentityScope();
        suggestionDaoConfig.clearIdentityScope();
        versionDaoConfig.clearIdentityScope();
        msgApkDaoConfig.clearIdentityScope();
    }

    public AppBeanDao getAppBeanDao() {
        return appBeanDao;
    }

    public AppClassficationDao getAppClassficationDao() {
        return appClassficationDao;
    }

    public SuggestionDao getSuggestionDao() {
        return suggestionDao;
    }

    public VersionDao getVersionDao() {
        return versionDao;
    }

    public MsgApkDao getMsgApkDao() {
        return msgApkDao;
    }

}
